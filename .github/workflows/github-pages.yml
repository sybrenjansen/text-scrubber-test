name: Docs

on: push

jobs:
  build-n-publish:
    name: Build and publish documentation to Github
    runs-on: Ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install .[docs]
    - name: Determine directory to publish docs to
      id: docs-publish-dir
      run: |
        python -c "
        import os, re
        github_ref = os.environ.get('GITHUB_REF')
        if github_ref == 'refs/heads/master':
          target = 'master'
        elif github_ref.startswith('refs/tags/'):
          m = re.match(r'^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$', github_ref);
          target = m.group(1)
        else:
          target = ''
        print(f'target={target}')" >> $GITHUB_OUTPUT
    - name: Build documentation
      run: |
        sphinx-build -M html ./docs/ ./docs/_build/
    - name: Publish documentation to Github
      if: steps.docs-publish-dir.outputs.target != ''
      uses: peaceiris/actions-gh-pages@v4
      with:
        deploy_key: ${{ secrets.DEPLOY_GITHUB_PAGES_KEY }}
        external_repository: sybrenjansen/sybrenjansen.github.io
        publish_branch: main
        publish_dir: ./docs/_build/html/
        destination_dir: text-scrubber-test/${{ steps.docs-publish-dir.outputs.target }}
    
  versions-json:
    name: Update docs versions JSON
    needs: build-n-publish
    runs-on: Ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Write versions to JSON file
      run: |
        mkdir ./version_info
        touch ./version_info/versions.json
        python -c "
        import json, subprocess
        process = subprocess.run(['git', 'tag', '-l'], capture_output=True)
        tags = sorted(process.stdout.decode().split(), reverse=True)
        version_info = [{'version': tag, 'title': tag, 'aliases': []} for tag in tags]
        version_info[-1]['aliases'].append('stable')
        version_info.append({'version': 'master', 'title': 'master', 'aliases': ['latest']})
        print(json.dumps(version_info))" >> ./version_info/versions.json
    - name: Publish versions JSON to GitHub pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        deploy_key: ${{ secrets.DEPLOY_GITHUB_PAGES_KEY }}
        external_repository: sybrenjansen/sybrenjansen.github.io
        publish_branch: main
        publish_dir: ./version_info/
        destination_dir: text-scrubber-test/
        keep_files: true
