name: Docs

on: push

jobs:
  build-n-publish:
    name: Build and publish documentation to Github
    runs-on: Ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        pip install .[docs]
    - name: Determine directory to publish docs to
      id: docs-publish-dir
      run: |
        python -c "
        import os, re
        github_ref = os.environ.get('GITHUB_REF')
        if github_ref == 'refs/heads/master':
          target = 'master'
        elif github_ref.startswith('refs/tags/'):
          m = re.match(r'^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$', github_ref);
          target = m.group(1)
        else:
          target = ''
        print(f'::set-output name=target::{target}')"
    - name: Build documentation
      run: |
        sphinx-build -M html ./docs/ ./docs/_build/html
    - name: Publish documentation to Github
      if: steps.docs-publish-dir.outputs.target != ''
      uses: peaceiris/actions-gh-pages@v4
      with:
        deploy_key: ${{ secrets.DEPLOY_GITHUB_PAGES_KEY }}
        external_repository: sybrenjansen/sybrenjansen.github.io
        publish_branch: main
        publish_dir: ./docs/_build/html/
        destination_dir: text-scrubber-test/${{ steps.docs-publish-dir.outputs.target }}
    
  versions-json:
    name: Update docs versions JSON
    needs: build-n-publish
    runs-on: Ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Write versions to JSON file
      uses: jannekem/run-python-script-action@v1
      with:
        script: |
          import subprocess
          import json

          process = subprocess.run(["git", "tag", "-l"], capture_output=True)
          tags = sorted(process.stdout.decode().split())
          version_info = [{"version": tag, "title": tag, "aliases": []} for tag in tags]
          version_info[-1]["aliases"].append("stable")
          version_info.append({"version": "master", "title": "master", "aliases": ["latest"]})
          
          with open('./versions.json', 'w') as f:
              json.dump(version_info, f)
    - name: Publish versions JSON to GitHub pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        deploy_key: ${{ secrets.DEPLOY_GITHUB_PAGES_KEY }}
        external_repository: sybrenjansen/sybrenjansen.github.io
        publish_branch: main
        publish_dir: ./
        destination_dir: text-scrubber-test/
        keep_files: true
